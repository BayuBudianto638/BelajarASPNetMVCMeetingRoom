@model BelajarASPNetMVC.Models.Layouts.EditLayoutViewModel

@{
    ViewBag.Title = "Edit Layout";
}

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">Edit Layout</h1>
    </div>
    <!-- /.col-lg-12 -->
</div>

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Edit Layout
            </div>
            <p></p>

            @using (Html.BeginForm("Edit", "Layout", null, FormMethod.Post, true, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.LayoutTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="form-group input-group">
                            @Html.EditorFor(model => model.LayoutTitle, new { htmlAttributes = new { @class = "form-control", @style = "width:150px" } })
                            @Html.ValidationMessageFor(model => model.LayoutTitle, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LayoutDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="form-group input-group">
                            @Html.EditorFor(model => model.LayoutDescription, new { htmlAttributes = new { @class = "form-control", @style = "width:250px" } })
                            @Html.ValidationMessageFor(model => model.LayoutDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LayoutPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="form-group input-group">
                            <span class="input-group-addon">Rp</span>
                            @Html.EditorFor(model => model.LayoutPrice, new { htmlAttributes = new { @class = "form-control", @style = "width:250px" } })
                            @Html.ValidationMessageFor(model => model.LayoutPrice, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LayoutCapacity, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="form-group input-group">
                            @Html.EditorFor(model => model.LayoutCapacity, new { htmlAttributes = new { @class = "form-control", @style = "width:150px" } })
                            @Html.ValidationMessageFor(model => model.LayoutCapacity, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LayoutImages, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="form-group input-group">
                            <input type="file" name="file" id="inputFile" multiple="multiple" />
                            <p>
                                <img alt="" id="displayImage" src="@ViewBag.Base64String" style="height:100px;width:200px;" />
                            </p>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-primary" />
                            <button class="btn btn-default" onclick="location.href='@Url.Action("Index", "Layout")';return false;">Cancel</button>
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
</div>

<script>
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#displayImage').attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }

    $("#inputFile").change(function () {
        readURL(this);
    });
</script>
